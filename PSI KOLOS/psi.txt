https://archive.ics.uci.edu/dataset/14/breast+cancer


1. Ogólne informacje
Podczas kolokwium będą Państwo projektować program w języku Python w oparciu o zbiór danych, który znają Państwo w sekcji kolokwium. Proszę o uważne czytanie pytań. Używanie Chat GPT lub innych chatbotów/aplikacji opartych o AI do generowania rozwiązań jest zabronione, tak samo jak korzystanie z telefonu podczas kolokwium. Można korzystać ze sporządzonych notatek na kolokwium, o których mówiłam na zajęciach. Z Internetu korzystamy tylko i wyłącznie do przesłania rozwiązanego kolokwium.

Maksymalna liczba punktów do zdobycia to 12 punktów. Zaliczenie kolokwium jest od 6 pkt.

2. Zadania

Proszę o wykonanie następujących zadań.

Zadanie1. 

Wczytaj plik data.csv zawierający dane Breast Cancer do ramki DataFrame w Pandas.
Wyświetl pierwsze 5 wierszy (df.head()) i nazwy kolumn (df.columns).
Sprawdź, ile wierszy (próbek) i ile kolumn (cech) znajduje się w zbiorze danych.
Zobacz, czy są kolumny zbędne (np. id, Unnamed: 32) lub zawierające same NaN. 
Jeśli tak – zdecyduj, co z nimi zrobić. Dane usuwamy tylko poprzez kod Pythona. (2 pkt)
Podpowiedź do usuwania kolumn:

if 'id' in df.columns:
    df.drop('id', axis=1, inplace=True)
if 'Unnamed: 32' in df.columns:
    df.drop('Unnamed: 32', axis=1, inplace=True)



Zadanie2.

Zidentyfikuj kolumnę z etykietą diagnosis z etykietami M i B.
Wybierz tylko dwie kolumny (np. radius_mean i texture_mean) jako cechy (X_2d).
Zapisz wektor etykiet (y) jako wartości M/B (przed enkodowaniem). (2 pkt)



Zadanie3.

Użyj LabelEncoder, aby zamienić je na wartości 0 i 1 (np. M → 1, B → 0).
Podziel dane na trzy części: treningowy (70%), walidacyjny (15%) i testowy (15%).
Użyj train_test_split dwukrotnie: najpierw test_size=0.3, a potem na pozostałych 30% podziel 50 na 50. (3 pkt)



Zadanie4.

Skaluj cechy przy pomocy StandardScaler, w tym fit.transform na zbiorze treningowym i transform na zbiorze walidacyjnym i testowym.
Wytrenuj perceptron (Perceptron(max_iter=5000, eta0=0.001, random_state=42)) na zbiorze treningowym. (3 pkt)



Zadanie5.

Narysuj na wykresie wszystkie próbki (np. łącząc train+val+test), oznaczając kolorem te należące do klasy 0 (Benign) i klasy 1 (Malignant).
Wyznacz granicę decyzyjną perceptronu w 2D i narysuj ją na wykresie.
Dla perceptronu w scikit-learn wymiary wagi to perceptron.coef_ (np. [w1, w2]) i perceptron.intercept_ (bias, np. b).
Równanie granicy decyzyjnej:

𝑦 = (𝑏+𝑤1𝑥) / (𝑤2)
​
Zinterpretuj, czy granica dobrze oddziela obie klasy. 
Sprawdź, czy wiele punktów trafia „po złej stronie”. 
Wnioski dopisz w komentarzach w kodzie. (2 pkt)

